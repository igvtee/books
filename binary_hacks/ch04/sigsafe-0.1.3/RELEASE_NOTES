$Id: RELEASE_NOTES 758 2004-05-11 09:31:49Z slamb $

sigsafe version 0.1.3 release notes:

* Most existing platforms work without problems.

* The FreeBSD and NetBSD builds, by default, are single-threaded only.
  I'd be interested to hear from people who have tried multi-threaded versions
  on the -CURRENT versions of these systems. Older versions do not have a
  suitable threading library.

* The race condition checker is only working on Linux. I'd appreciate any help
  porting it to other systems; it has proved unexpectedly difficult.

* There appears to be, ironically, a race condition in the checker on
  Linux/alpha. I suspect a kernel bug. Details:

  - On a single-processor system, it appears to work perfectly. Machine specs:

    spe141.testdrive.compaq.com:
    - Alpha XP1000a
    - Debian 3.0
    - kernel 2.4.18-generic
    - glibc 2.2.5

    Unfortunately, this system is being removed, so I will not be able to test
    it for much longer.

  - On three different SMP systems, the race condition checker often fails -
    the child dies with SIGTRAP. I think this is not a real problem with the
    code being checked, but rather a race in ptrace() itself. Machine specs:

    spe144.testdrive.compaq.com:
    - Alpha ES40
    - RedHat 7.2
    - kernel 2.4.9-32.5smp
    - glibc 2.2.4-29

    spe161.testdrive.compaq.com:
    - Alpha DS40
    - Debian 3.0
    - kernel 2.4.18-smp
    - glibc 2.2.5

    spe148.testdrive.compaq.com:
    - Alpha DS40
    - RedHat 7.2
    - kernel 2.4.9-32.5smp
    - glibc 2.2.4-29

* The documentation is improved, but it still has a ways to go:

  - The "Background" section stops abruptly. There are a lot more topics to
    cover.
  - The "Pattern reference" could use more explanation and should be adapted
    to use the same terminology.
  - The "Goal reference" doesn't really exist yet.
  - The "Porting" section is missing the step-by-step tour.
  - The "Performance" section is missing the shiny microbenchmark graphs. More
    importantly, it's missing real-world performance tests to determine if
    sigsafe's possible speed advantage is significant in a real system.
  - The section about behavior of existing system calls could use bulking out.

  If you spot anything wrong with what's already there, please let me know. If
  it's unclear to you, odds are it is to someone else, too. And if it seems
  wrong to you, let me know so I can correct or justify it.

  Patches to add new documentation are also welcome. But saying "it's just not
  there" doesn't help - I already know that.
